#!/bin/sh

# make sure paths don't break when script is running from within Makefile
SCRIPTPATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

echo "--- [start vault integration tests] ---"
echo " - run vault docker image -"
docker run --name test-vault --rm -d -e SKIP_SETCAP=1 -e 'VAULT_DEV_ROOT_TOKEN_ID=dev-root-token' -p 8200:8200 vault:1.3.1
sleep 3

# setup vault, and set VAK_ROLE_ID and VAK_ROLE_SECRET_ID env. vars
echo " - mount and setup vault auth approle -"
eval "$(VAK_VAULT_HOST="http://localhost:8200" VAK_VAULT_TOKEN="dev-root-token" "$SCRIPTPATH"/vault-setup)"

# comment code below to leave the vault running and debug integration test by setting printed role-id and secret-id
# you can use vault ui as well on http://localhost:8200/ui and use 'dev-root-token' to log in
echo "role id: $VAK_VAULT_ROLE_ID"
echo "secret id: $VAK_VAULT_SECRET_ID"

echo " - run tests -"
VAK_VAULT_ROLE_ID=$VAK_VAULT_ROLE_ID VAK_VAULT_SECRET_ID=$VAK_VAULT_SECRET_ID go test -v ./integration -tags vault

docker stop test-vault
echo "--- [end vault integration tests] ---"
